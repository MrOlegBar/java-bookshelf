CREATE TABLE IF NOT EXISTS users
(
    user_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name     VARCHAR        NOT NULL,
    user_password VARCHAR        NOT NULL,
    user_email    VARCHAR UNIQUE NOT NULL,
    user_created  TIMESTAMP DEFAULT now()
);

CREATE TABLE IF NOT EXISTS bookshelfs
(
    bookshelf_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    bookshelf_name     VARCHAR UNIQUE NOT NULL,
    bookshelf_owner_id BIGINT         NOT NULL,
    CONSTRAINT bookshelfs_users_id_fk FOREIGN KEY (bookshelf_owner_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS books
(
    book_id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    book_title            VARCHAR UNIQUE NOT NULL,
    book_author           VARCHAR        NOT NULL,
    book_owner_id         BIGINT         NOT NULL,
    book_is_available     BOOLEAN DEFAULT false,
    book_available_before TIMESTAMP,
    book_bookshelf_id     BIGINT         NOT NULL,
    CONSTRAINT books_users_id_fk FOREIGN KEY (book_owner_id) REFERENCES users (user_id),
    CONSTRAINT book_bookshelf_id_fk FOREIGN KEY (book_bookshelf_id) REFERENCES bookshelfs (bookshelf_id)
);

CREATE TABLE IF NOT EXISTS users_books
(
    user_id BIGINT,
    book_id BIGINT,
    CONSTRAINT users_books_user_id_book_id_pk PRIMARY KEY (user_id, book_id),
    CONSTRAINT users_books_user_id_fk FOREIGN KEY (user_id) REFERENCES users (user_id),
    CONSTRAINT users_books_book_id_fk FOREIGN KEY (book_id) REFERENCES books (book_id)
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    request_book_id      BIGINT  NOT NULL,
    request_requester_id BIGINT  NOT NULL,
    request_created      TIMESTAMP DEFAULT now(),
    request_status       VARCHAR NOT NULL,
    CONSTRAINT request_requester_id_request_event_id_unique UNIQUE (request_requester_id, request_book_id),
    CONSTRAINT requests_users_id_fk FOREIGN KEY (request_requester_id) REFERENCES users (user_id),
    CONSTRAINT requests_book_id_fk FOREIGN KEY (request_book_id) REFERENCES books (book_id)
);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    comment_text       VARCHAR,
    comment_author_id  BIGINT,
    comment_created    TIMESTAMP DEFAULT now(),
    comment_edited     TIMESTAMP,
    comment_request_id BIGINT,
    CONSTRAINT comments_users_id_fk FOREIGN KEY (comment_author_id) REFERENCES users (user_id),
    CONSTRAINT comments_request_id_fk FOREIGN KEY (comment_request_id) REFERENCES requests (request_id)
);